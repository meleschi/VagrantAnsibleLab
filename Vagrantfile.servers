# -*- mode: ruby -*-
# vi: set ft=ruby :

servers=[
  {
    :hostname => "server1.example.com",
    :ip => "192.168.60.4",
    :box => "rockylinux/9",
    :ram => 1024,
    :cpus => 1
  },
  {
    :hostname => "server2.example.com",
    :ip => "192.168.60.5",
    :box => "rockylinux/9",
    :ram => 1024,
    :cpus => 1
  },
  {
    :hostname => "server3.example.com",
    :ip => "192.168.60.6",
    :box => "rockylinux/9",
    :ram => 1024,
    :cpus => 1
  },
  {
    :hostname => "server4.example.com",
    :ip => "192.168.60.7",
    :box => "rockylinux/9",
    :ram => 1024,
    :cpus => 1
  },
  {
    :hostname => "server5.example.com",
    :ip => "192.168.60.8",
    :box => "rockylinux/9",
    :ram => 1024,
    :cpus => 1
  }
]

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |serversconfig|
  servers.each do |servers|
    serversconfig.vm.define servers[:hostname] do |serversnode|
      serversnode.ssh.insert_key = true
      #serversnode.vm.synced_folder ".", "/vagrant", disabled: false
      serversnode.vm.box = servers[:box]
      serversnode.vm.hostname = servers[:hostname]
      serversnode.vm.network "private_network", ip: servers[:ip]
      serversnode.vm.provider "virtualbox" do |serversvb|
        serversvb.memory = servers[:ram]
        serversvb.cpus = servers[:cpus]
        serversvb.linked_clone = true
      end
    
      # Copy home user SSH key to each VM's authorized_keys so you can run ansible from Vagrant Host
      serversconfig.vm.provision "shell" do |ssh|
        ssh_prv_key = ""
        ssh_pub_key = ""
        if File.file?("#{Dir.home}/.ssh/id_rsa")
          ssh_prv_key = File.read("#{Dir.home}/.ssh/id_rsa")
          ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        else
          puts "No SSH key found. You will need to remedy this before pushing to the repository."
        end
        ssh.inline = <<-SHELL
          if grep -sq "#{ssh_pub_key}" /home/vagrant/.ssh/authorized_keys; then
            echo "SSH keys already provisioned."
            exit 0;
          fi
          echo "SSH key provisioning."
          mkdir -p /home/vagrant/.ssh/
          touch /home/vagrant/.ssh/authorized_keys
          echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
          echo #{ssh_pub_key} > /home/vagrant/.ssh/id_rsa.pub
          chmod 644 /home/vagrant/.ssh/id_rsa.pub
          echo "#{ssh_prv_key}" > /home/vagrant/.ssh/id_rsa
          chmod 600 /home/vagrant/.ssh/id_rsa
          chown -R vagrant:vagrant /home/vagrant
          exit 0
        SHELL
      end
    end
  end
end
